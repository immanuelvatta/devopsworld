name: $(date:yyyyMMdd)$(rev:.rr)

stages:
  - stage: 'build'
    condition: succeeded()
    displayName: 'build-mvc'
    jobs:
      - job:
        condition: succeeded()
        displayName: 'build-process'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: UseDotNet@2
            displayName:  'dotnet installer'
            inputs:
              version: '2.2.401'
          - script: |
              dotnet build

  - stage: 'test'
    condition: succeeded()
    displayName: 'test-mvc'
    jobs:
      - job:
        condition: succeeded()
        displayName: 'test-process'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - script: |
              dotnet tool install --global sonarscanner
              dotnet sonarscanner begin /k:"DevopsDemo2019" /o:"immanuelvatta" /d:sonar.login="cb34db27761ca448cf43f49a48d3d9e20b8f9bf3" 
              dotnet build
              dotnet test -p:CollectCoverage=true
              dotnet sonarscanner end /d:sonar.login="cb34db27761ca448cf43f49a48d3d9e20b8f9bf3" 
              
  
  - stage: 'pack'
    condition: succeeded()
    dependsOn:
      - test
    displayName: 'pack-mvc'
    jobs:
      - job:
        condition: succeeded()
        displayName: 'pack-process'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - script: |
              dotnet publish
  
  - stage: 'deploy'
    condition: succeeded()
    dependsOn:
      - test
    displayName: 'deploy-mvc'
    jobs:
      - job:
        condition: succeeded()
        displayName: 'deploy-process'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - script: |
              echo 'working on it ...'

trigger:
  branches:
    include:
      - master

variables:
  sonar: 'token'